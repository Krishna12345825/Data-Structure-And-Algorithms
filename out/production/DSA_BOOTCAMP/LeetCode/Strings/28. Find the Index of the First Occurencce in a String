
https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string/description/

/*
28. Find the Index of the First Occurrence in a String

Given two strings needle and haystack, return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.

Example 1:
Input: haystack = "sadbutsad", needle = "sad"
Output: 0
Explanation: "sad" occurs at index 0 and 6.
The first occurrence is at index 0, so we return 0.

Example 2:
Input: haystack = "leetcode", needle = "leeto"
Output: -1
Explanation: "leeto" did not occur in "leetcode", so we return -1.

Constraints:
1 <= haystack.length, needle.length <= 104
haystack and needle consist of only lowercase English characters.
*/


class Solution {
    public int strStr(String haystack, String needle) {
        int hayLength = haystack.length();
        int needleLength = needle.length();
        if (needleLength > hayLength) {
            return -1;
        }
        for (int i = 0; i <= hayLength - needleLength; i++) {
            String substring = haystack.substring(i, i + needleLength);
            if (substring.equals(needle)) {
                return i;
            }
        }
        return -1;
    }
}




1. Check if the length of the needle is greater than the length of the haystack. If it is, then needle cannot be a part of haystack, so return -1.
2. Iterate over the haystack string until the remaining length of the substring is at least equal to the length of the needle. You can use a for loop for this iteration.
3. Within each iteration, use the substring method to extract a substring from the haystack string, starting from the current index and having a length equal to the length of the needle.
4. Check if the extracted substring is equal to the needle. If it is, return the current index.
5. If the loop finishes without finding a match, return -1.