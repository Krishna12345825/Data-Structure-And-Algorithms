
https://leetcode.com/problems/plus-one/description/

/*
66. Plus One

You are given a large integer represented as an integer array digits, where each digits[i] is the ith digit of the integer. The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading 0's.
Increment the large integer by one and return the resulting array of digits.

Example 1:
Input: digits = [1,2,3]
Output: [1,2,4]
Explanation: The array represents the integer 123.
Incrementing by one gives 123 + 1 = 124.
Thus, the result should be [1,2,4].

Example 2:
Input: digits = [4,3,2,1]
Output: [4,3,2,2]
Explanation: The array represents the integer 4321.
Incrementing by one gives 4321 + 1 = 4322.
Thus, the result should be [4,3,2,2].

Example 3:
Input: digits = [9]
Output: [1,0]
Explanation: The array represents the integer 9.
Incrementing by one gives 9 + 1 = 10.
Thus, the result should be [1,0].

Constraints:
1 <= digits.length <= 100
0 <= digits[i] <= 9
digits does not contain any leading 0's.
*/

class Solution {
    public int[] plusOne(int[] digits) {
        int n = digits.length;
        for(int i = n-1; i>=0; i--){
            if(digits[i] < 9){
                digits[i] = digits[i] + 1;
                return digits;
            }else{
                digits[i] = 0;
            }
        }
        int results[] = new int[n+1];
        results[0] = 1;
        return results;
    }
}


1. Loop through the array of digits from right to left.
2. Increment the rightmost digit by 1.
3. If the digit becomes 10, set it to 0 and carry the 1 to the left.
4. Otherwise, stop the loop.
5. If there is a remaining carry, create a new array of size digits.length + 1 and set the first element to 1. Otherwise, create a new array of the same size as the original digits array.
6. Copy the digits to the new array, starting from the rightmost digit.
7. Return the new array.