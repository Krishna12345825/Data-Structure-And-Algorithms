
https://leetcode.com/problems/reshape-the-matrix/

/*
566. Reshape the Matrix

In MATLAB, there is a handy function called reshape which can reshape an m x n matrix into a new one with a different size r x c keeping its original data.
You are given an m x n matrix mat and two integers r and c representing the number of rows and the number of columns of the wanted reshaped matrix.
The reshaped matrix should be filled with all the elements of the original matrix in the same row-traversing order as they were.
If the reshape operation with given parameters is possible and legal, output the new reshaped matrix; Otherwise, output the original matrix.

Example 1:
Input: mat = [[1,2],[3,4]], r = 1, c = 4
Output: [[1,2,3,4]]

Example 2:
Input: mat = [[1,2],[3,4]], r = 2, c = 4
Output: [[1,2],[3,4]]

Constraints:
m == mat.length
n == mat[i].length
1 <= m, n <= 100
-1000 <= mat[i][j] <= 1000
1 <= r, c <= 300
*/

class Solution {
    public int[][] matrixReshape(int[][] mat, int r, int c){
      int m = mat.length;
    int n = mat[0].length;

    if (m * n != r * c) {
        return mat;
        // Return the original matrix if reshape is not possible
    }

    int[][] reshaped = new int[r][c];
    int row = 0;
    int col = 0;

    for (int i = 0; i < m; i++) {
        for (int j = 0; j < n; j++) {
            reshaped[row][col] = mat[i][j];
            col++;
            if (col == c) {
                col = 0;
                row++;
            }
        }
    }

    return reshaped;
    }
}



1. Check if the reshape operation is possible by comparing the total number of elements in the original matrix (m x n) with the total number of elements in the reshaped matrix (r x c). If they are not equal, return the original matrix mat.
2. Create a new reshaped matrix with dimensions r x c.
3. Initialize two variables: row and col to keep track of the current row and column indices in the reshaped matrix.
4. Loop through each element in the original matrix mat.
5. Copy the current element to the reshaped matrix at position (row, col).
6. Increment the column index col by 1.
7. If the column index col reaches the maximum number of columns, reset it to 0 and increment the row index row by 1.
8. After copying all the elements from the original matrix to the reshaped matrix, return the reshaped matrix.