
https://leetcode.com/problems/find-the-highest-altitude/

/*
1732. Find the Highest Altitude

There is a biker going on a road trip. The road trip consists of n + 1 points at different altitudes. The biker starts his trip on point 0 with altitude equal 0.
You are given an integer array gain of length n where gain[i] is the net gain in altitude between points i and i + 1 for all (0 <= i < n). Return the highest altitude of a point.

Example 1:
Input: gain = [-5,1,5,0,-7]
Output: 1
Explanation: The altitudes are [0,-5,-4,1,1,-6]. The highest is 1.

Example 2:
Input: gain = [-4,-3,-2,-1,4,3,2]
Output: 0
Explanation: The altitudes are [0,-4,-7,-9,-10,-6,-3,-1]. The highest is 0.

Constraints:
n == gain.length
1 <= n <= 100
-100 <= gain[i] <= 100
*/

class Solution {
    public int largestAltitude(int[] gain) {
       int currentAltitude =0;
       int maxAltitude =0;
        for(int i=0; i<gain.length; i++){
            currentAltitude =currentAltitude+gain[i];
            if(currentAltitude>maxAltitude){
             maxAltitude  = currentAltitude;
            }
        }
        return maxAltitude;
    }
}




1. Initialize two variables: currentAltitude and highestAltitude to 0. These variables will keep track of the current altitude and highest altitude seen so far, respectively.
2. Iterate through the gain array using a for loop starting from index 0.
3. In each iteration, add gain[i] to currentAltitude to calculate the new altitude.
4. If the currentAltitude is greater than highestAltitude, update highestAltitude to currentAltitude.
5. After the loop ends, return the highestAltitude as the result.


