
https://leetcode.com/problems/valid-palindrome/description/

/*
125. Valid Palindrome

A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.
Given a string s, return true if it is a palindrome, or false otherwise.

Example 1:
Input: s = "A man, a plan, a canal: Panama"
Output: true
Explanation: "amanaplanacanalpanama" is a palindrome.

Example 2:
Input: s = "race a car"
Output: false
Explanation: "raceacar" is not a palindrome.

Example 3:
Input: s = " "
Output: true
Explanation: s is an empty string "" after removing non-alphanumeric characters.
Since an empty string reads the same forward and backward, it is a palindrome.

Constraints:
1 <= s.length <= 2 * 105
s consists only of printable ASCII characters.
*/


class Solution {
    public boolean isPalindrome(String s) {
        int left = 0;
        int right = s.length() - 1;
        while (left < right) {
            char l = s.charAt(left), r = s.charAt(right);
            if (!Character.isLetterOrDigit(l))
                left++;
            else if (!Character.isLetterOrDigit(r))
                right--;
            else if (Character.toLowerCase(l) != Character.toLowerCase(r))
                return false;
            else {
                left++;
                right--;
            }
        }
        return true;
    }
}

1. Convert the string to lowercase using the toLowerCase() method. This ensures that the comparison is case-insensitive.
2. Iterate over the string using two pointers, let's call them start and end. start starts at the beginning of the string and end starts at the end of the string.
3. While start is less than end:
          -  If the character at start is not alphanumeric, increment start and continue to the next iteration.
          -  If the character at end is not alphanumeric, decrement end and continue to the next iteration.
          -  If the characters at start and end are not equal, the string is not a palindrome. Return false.
          -  Otherwise, increment start and decrement end.
4. If the loop completes without returning false, return true as the string is a palindrome.