
https://leetcode.com/problems/longest-common-prefix/

/*
14. Longest Common Prefix

Write a function to find the longest common prefix string amongst an array of strings.
If there is no common prefix, return an empty string "".

Example 1:
Input: strs = ["flower","flow","flight"]
Output: "fl"

Example 2:
Input: strs = ["dog","racecar","car"]
Output: ""
Explanation: There is no common prefix among the input strings.

Constraints:
1 <= strs.length <= 200
0 <= strs[i].length <= 200
strs[i] consists of only lowercase English letters.
*/

class Solution {
    public String longestCommonPrefix(String[] strs) {
       if (strs.length == 0) {
            return "";
        }
        String prefix = "";
        for (int i = 0; i < strs[0].length(); i++) {
            char currChar = strs[0].charAt(i);

            for (int j = 1; j < strs.length; j++) {
                if (i >= strs[j].length() || strs[j].charAt(i) != currChar) {
                    return prefix;
                }
            }

            prefix += currChar;
        }

        return prefix;
    }
}


1. If the input array strs is empty, return an empty string.
2. Initialize a variable prefix as an empty string. This variable will store the common prefix.
3. Iterate through the characters of the first string strs[0] using a for-loop.
4. For each character at index i, iterate through each string in the array strs starting from the second string strs[1].
5. If the character at index i is not equal to the character at index i in any of the strings, return the value of the prefix variable.
6. If the character at index i is equal in all strings, append it to the prefix variable.
7. After the loop completes, return the value of the prefix variable.