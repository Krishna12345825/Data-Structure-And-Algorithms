https://leetcode.com/problems/sorting-the-sentence/description/

/*
1859. Sorting the Sentence

A sentence is a list of words that are separated by a single space with no leading or trailing spaces.
 Each word consists of lowercase and uppercase English letters.
A sentence can be shuffled by appending the 1-indexed word position to each word then rearranging the words in the sentence.

For example, the sentence "This is a sentence" can be shuffled as "sentence4 a3 is2 This1" or "is2 sentence4 This1 a3".
Given a shuffled sentence s containing no more than 9 words, reconstruct and return the original sentence.

Example 1:
Input: s = "is2 sentence4 This1 a3"
Output: "This is a sentence"
Explanation: Sort the words in s to their original positions "This1 is2 a3 sentence4", then remove the numbers.

Example 2:
Input: s = "Myself2 Me1 I4 and3"
Output: "Me Myself and I"
Explanation: Sort the words in s to their original positions "Me1 Myself2 and3 I4", then remove the numbers.

Constraints:
2 <= s.length <= 200
s consists of lowercase and uppercase English letters, spaces, and digits from 1 to 9.
The number of words in s is between 1 and 9.
The words in s are separated by a single space.
*/


class Solution {
    public String sortSentence(String s) {
     String[] words = s.split(" ");
    String[] result = new String[words.length];

    for (String word : words) {
        int position = Character.getNumericValue(word.charAt(word.length() - 1));
        // Extract the position number from the end of the word
        result[position - 1] = word.substring(0, word.length() - 1);
         // Store the word in the corresponding position
    }
    return String.join(" ", result);
     // Combine the words in the result array into a single sentence
    }
}





1. Split the given sentence into individual words using the space (" ") as the delimiter.
2. Create an array of strings to store each word.
3. Iterate through each word and extract the position number from the end of the word.
4. Store each word in the corresponding position in the result array.
5. Combine the words in the result array into a single sentence separated by spaces.
6. Return the sorted sentence