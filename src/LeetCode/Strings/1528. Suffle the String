https://leetcode.com/problems/shuffle-string/description/

/*
1528. Shuffle String

You are given a string s and an integer array indices of the same length.
The string s will be shuffled such that the character at the ith position moves to indices[i] in the shuffled string.
Return the shuffled string.

Example 1:
Input: s = "codeleet", indices = [4,5,6,7,0,2,1,3]
Output: "leetcode"
Explanation: As shown, "codeleet" becomes "leetcode" after shuffling.

Example 2:
Input: s = "abc", indices = [0,1,2]
Output: "abc"
Explanation: After shuffling, each character remains in its position.


Constraints:
s.length == indices.length == n
1 <= n <= 100
s consists of only lowercase English letters.
0 <= indices[i] < n
All values of indices are unique
*/


class Solution {
    public String restoreString(String s, int[] indices) {
        char shuffled[] = new char[s.length()];
        for(int i=0; i<s.length(); i++){
          shuffled[indices[i]] =  s.charAt(i);
        }
        return new String(shuffled);
    }
}



To shuffle the string according to the given indices, you can create a new character array of the same length as the string s.
 Then, iterate through the indices array and assign each character from s to the corresponding position in the new array.
 This code iterates through each character of the input string s and assigns it to the corresponding position in the
 shuffled array based on the indices. Finally, it creates a new string from the shuffled array and returns it as the shuffled string.